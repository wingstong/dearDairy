<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>